name: Deploy Vue.js App to S3

on:
  push:
    branches:
      - main  # workflow შეასრულებს მხოლოდ `main` ბრANCH-ზე

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. კოდის გამოყვანა
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Node.js-ის ვერსიის დაყენება
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # გამოიყენეთ თქვენი პროექტისთვის საჭირო Node.js ვერსია

      # 3. Dependencies-ის ინსტალაცია
      - name: Install dependencies
        run: npm install

      # 4. Vue.js აპლიკაციის ბილდი
      - name: Build Vue.js App
        run: npm run build

      # 5. AWS CLI ინსტრუმენტების კონფიგურაცია
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-central-1'  # შეცვალეთ თქვენი AWS რეგიონი

      # 6. Vue.js აპლიკაციის სინქრონიზაცია S3-თან
      - name: Sync to S3
        run: |
          aws s3 sync ./dist s3://newbucket-vue-test/ --delete

      # 7. CloudFront ქეშის განახლება
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id EQ4K8H9VVC8X2 --paths "/*"

